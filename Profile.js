import React, { useState, useEffect } from "react";
import { auth, db } from "./firebase";
import { doc, getDoc, updateDoc } from "firebase/firestore";
import { updateProfile } from "firebase/auth";
import { useNavigate } from "react-router-dom";

function Profile() {
  const [user, setUser] = useState(null);
  const [userData, setUserData] = useState(null);
  const [displayName, setDisplayName] = useState("");
  const [photoURL, setPhotoURL] = useState("");
  const [loading, setLoading] = useState(true);
  const navigate = useNavigate();

  useEffect(() => {
    const fetchUserData = async () => {
      auth.onAuthStateChanged(async (currentUser) => {
        if (currentUser) {
          setUser(currentUser);
          setDisplayName(currentUser.displayName || "");
          setPhotoURL(currentUser.photoURL || "");

          const userDoc = await getDoc(doc(db, "users", currentUser.uid));
          if (userDoc.exists()) {
            setUserData(userDoc.data());
          }
        } else {
          navigate("/login"); // ржЗржЙржЬрж╛рж░ рж▓ржЧржЗржи ржирж╛ ржерж╛ржХрж▓рзЗ рж▓ржЧржЗржи ржкрзЗржЬрзЗ ржкрж╛ржарж╛ржирзЛ рж╣ржмрзЗ
        }
        setLoading(false);
      });
    };

    fetchUserData();
  }, [navigate]);

  // **ЁЯФе ржЗржЙржЬрж╛рж░рзЗрж░ ржирж╛ржо ржПржмржВ ржЫржмрж┐ ржЖржкржбрзЗржЯ ржлрж╛ржВрж╢ржи**
  const handleUpdateProfile = async () => {
    if (user) {
      try {
        // Firebase Authentication-ржП ржирж╛ржо ржПржмржВ ржкрзНрж░рзЛржлрж╛ржЗрж▓ ржЫржмрж┐ ржЖржкржбрзЗржЯ
        await updateProfile(user, {
          displayName,
          photoURL,
        });

        // Firestore-ржП ржЗржЙржЬрж╛рж░рзЗрж░ рждржерзНржп ржЖржкржбрзЗржЯ
        await updateDoc(doc(db, "users", user.uid), {
          displayName,
          photoURL,
        });

        alert("ржкрзНрж░рзЛржлрж╛ржЗрж▓ рж╕ржлрж▓ржнрж╛ржмрзЗ ржЖржкржбрзЗржЯ рж╣рзЯрзЗржЫрзЗ!");
      } catch (error) {
        console.error("ржкрзНрж░рзЛржлрж╛ржЗрж▓ ржЖржкржбрзЗржЯ ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣рзЯрзЗржЫрзЗ:", error);
      }
    }
  };

  if (loading) return <p>рж▓рзЛржб рж╣ржЪрзНржЫрзЗ...</p>;

  return (
    <div>
      <h2>ЁЯСд ржЗржЙржЬрж╛рж░ ржкрзНрж░рзЛржлрж╛ржЗрж▓</h2>
      {user ? (
        <div>
          <img
            src={photoURL || "https://via.placeholder.com/150"}
            alt="Profile"
            width="150"
            style={{ borderRadius: "50%" }}
          />
          <h3>ржирж╛ржо: {user.displayName || "ржирж╛ржо ржирзЗржЗ"}</h3>
          <p>ЁЯУй ржЗржорзЗржЗрж▓: {user.email}</p>

          {userData && (
            <p>ЁЯФ╣ ржирж┐ржмржирзНржзржи рждрж╛рж░рж┐ржЦ: {userData.createdAt?.toDate().toLocaleString()}</p>
          )}

          {/* ЁЯФе ржирж╛ржо ржПржмржВ ржкрзНрж░рзЛржлрж╛ржЗрж▓ ржЫржмрж┐ ржЖржкржбрзЗржЯ ржлрж░рзНржо */}
          <div>
            <h3>тЪЩя╕П ржкрзНрж░рзЛржлрж╛ржЗрж▓ ржЖржкржбрзЗржЯ ржХрж░рзБржи</h3>
            <label>
              ржирж╛ржо:
              <input
                type="text"
                value={displayName}
                onChange={(e) => setDisplayName(e.target.value)}
              />
            </label>
            <br />
            <label>
              ржкрзНрж░рзЛржлрж╛ржЗрж▓ ржЫржмрж┐ URL:
              <input
                type="text"
                value={photoURL}
                onChange={(e) => setPhotoURL(e.target.value)}
              />
            </label>
            <br />
            <button onClick={handleUpdateProfile}>ЁЯФД ржЖржкржбрзЗржЯ ржХрж░рзБржи</button>
          </div>
        </div>
      ) : (
        <p>ржЖржкржирж┐ рж▓ржЧржЗржи ржХрж░рзЗржиржирж┐!</p>
      )}
    </div>
  );
}

export default Profile;
